import{_ as s,o as a,c as n,U as l}from"./chunks/framework.3eb667f5.js";const e="/assets/1.fa7ac20c.webp",p="/assets/2.5c77dc52.webp",t="/assets/3.3a14d55e.webp",o="/assets/4.39caee43.webp",r="/assets/5.bfc31f4e.webp",c="/assets/6.389d1746.webp",i="/assets/7.ac159e8d.webp",C="/assets/8.500725f1.webp",d="/assets/9.0b58f122.webp",b="/assets/10.e065c3ea.webp",y="/assets/11.f291e81a.webp",u="/assets/12.06661aae.webp",k=JSON.parse('{"title":"AI - stable-diffusion(AI绘画)的搭建与使用","description":"","frontmatter":{},"headers":[],"relativePath":"life/sdweb/sdweb.md","lastUpdated":1689304804000}'),A={name:"life/sdweb/sdweb.md"},D=l(`<h1 id="ai-stable-diffusion-ai绘画-的搭建与使用" tabindex="-1">AI - stable-diffusion(AI绘画)的搭建与使用 <a class="header-anchor" href="#ai-stable-diffusion-ai绘画-的搭建与使用" aria-label="Permalink to &quot;AI - stable-diffusion(AI绘画)的搭建与使用&quot;">​</a></h1><h2 id="一、环境搭建" tabindex="-1">一、环境搭建 <a class="header-anchor" href="#一、环境搭建" aria-label="Permalink to &quot;一、环境搭建&quot;">​</a></h2><p>使用开源的 AI 绘画项目 <code>stable-diffusion</code> 绘制的，这是它的官方仓库：</p><ul><li><a href="https://github.com/CompVis/stable-diffusion" target="_blank" rel="noreferrer">https://github.com/CompVis/stable-diffusion</a></li></ul><p>但是这个官方项目并不适合我们这些新手直接使用，好在有一些基于 stable-diffusion 封装的 webui 开源项目，可以通过界面交互的方式来使用 stable-diffusion，极大的降低了使用门槛，以下是几个比较火的 webui 项目：</p><ul><li><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui" target="_blank" rel="noreferrer">https://github.com/AUTOMATIC1111/stable-diffusion-webui</a><a href="https://github.com/Sygil-Dev/sygil-webui" target="_blank" rel="noreferrer">https://github.com/Sygil-Dev/sygil-webui</a></li></ul><p>其中，AUTOMATIC1111 的 stable-diffusion-webui 是目前功能最多最好用的，强烈推荐，下面就来介绍如何使用它。</p><h3 id="_1、下载项目" tabindex="-1">1、下载项目 <a class="header-anchor" href="#_1、下载项目" aria-label="Permalink to &quot;1、下载项目&quot;">​</a></h3><p>stable-diffusion-webui 没有发布可执行程序（比如：.exe），我们需要通过 git 的方式将整个工程源码拉下来运行：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight has-diff"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/AUTOMATIC1111/stable-diffusion-webui.git</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>注：这个开源项目目前的更新频率很快，会不定期的修复一些 bug 或加入一些新功能，所以建议可以时常 git pull 拉取最新代码。</p><h3 id="_2、python-环境" tabindex="-1">2、Python 环境 <a class="header-anchor" href="#_2、python-环境" aria-label="Permalink to &quot;2、Python 环境&quot;">​</a></h3><p>stable-diffusion-webui 主要是使用 Python 开发的，所以运行这个工程，需要安装一下 Python 环境并配置好环境变量，因为 Python 环境的安装很简单，这里就不多说了，环境配置完成之后，可以通过以下命令查看 Python 的版本号，验证环境是否正常：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">python</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--version</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>注意：官方推荐安装 Python 3.10.6 版本</p><p>另外，建议使用 Anaconda 管理多个 Python 环境，详见</p><ul><li><p>官方的 conda 环境安装说明：<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Install-and-Run-on-NVidia-GPUs#alternative-installation-on-windows-using-conda" target="_blank" rel="noreferrer">https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Install-and-Run-on-NVidia-GPUs#alternative-installation-on-windows-using-conda</a></p></li><li><p>anaconda 常用命令：<a href="https://blog.csdn.net/ligous/article/details/124209700" target="_blank" rel="noreferrer">https://blog.csdn.net/ligous/article/details/124209700</a></p></li></ul><h3 id="_3、cuda-环境" tabindex="-1">3、CUDA 环境 <a class="header-anchor" href="#_3、cuda-环境" aria-label="Permalink to &quot;3、CUDA 环境&quot;">​</a></h3><p>默认 stable-diffusion-webui 运行使用的是 GPU 算力，也就是说需要用到 Nvidia 显卡（配置越高，绘图越快）。这里我们需要安装 CUDA 驱动，先确定一下电脑能安装的 CUDA 版本，桌面右下角-&gt;右键 NVIDIA 设置图标-&gt;NVIDIA 控制面板： <img src="`+e+'" alt="1"></p><p>可以看到我的电脑的显示的是 <code>NVIDIA CUDA 11.6.134 driver</code>，所以我的电脑要安装的 CUDA 版本不能超过 11.6。</p><div class="tip custom-block"><p class="custom-block-title">注意</p><p>高版本显卡是可以安装低版本的 CUDA 驱动的，比如我也可以安装经典的 10.2 版本，但是安装 11.6 版本可以获得更高的 GPU 运行效率，所以一般来说推荐安装显卡支持的最高 CUDA 版本。</p></div><p>在下面的网址中找到对应的 CUDA 版本进行安装：</p><ul><li>CUDA 官方归档：<a href="https://developer.nvidia.com/cuda-toolkit-archive" target="_blank" rel="noreferrer">https://developer.nvidia.com/cuda-toolkit-archive</a></li></ul><p><img src="'+p+`" alt="2"></p><p>直接选择 “精简” 安装就可以了，安装完成之后，可以使用如下命令查看 CUDA 版本，来验证 CUDA 是否安装成功：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">nvcc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--version</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="`+t+'" alt="3"></p><div class="tip custom-block"><p class="custom-block-title">注：</p><p>如果你没有 Nvidia 显卡，也可以通过给 stable-diffusion-webui 指定运行参数 --use-cpu sd，让其使用 CPU 算力运行，但是非常不建议你这么做，CPU 算力跟 GPU 算力相比简直天差地别，可能 GPU 只需要 10 秒就能绘制完成，而 CPU 却要 10 分钟，这不是开玩笑的。另外，如果你的显卡内存不多，建议 4G 的显卡加上 --medvram 启动参数，2G 的显卡加上 --lowvram 启动参数。怎么配置启动参数我们后面说。</p></div><h3 id="_4、启动项目" tabindex="-1">4、启动项目 <a class="header-anchor" href="#_4、启动项目" aria-label="Permalink to &quot;4、启动项目&quot;">​</a></h3><p>在安装配置好运行环境之后，直接运行工程下的 webui-user.bat 文件即可（如果是类 Unix 系统，则运行 webui-user.sh）。首次启动会自动下载一些 Python 依赖库（具体哪些库请看工程下的 requirements.txt） ，以及项目需要用到的配置和模型文件（比如：v1-5-pruned-emaonly.safetensors，将近 4 个 G~），初始化一次之后，下次启动就快了。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Launching</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Web</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">UI</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">with</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">arguments:</span></span>\n<span class="line"><span style="color:#82AAFF;">...</span></span>\n<span class="line"><span style="color:#FFCB6B;">Running</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">local</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">URL:</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">http://127.0.0.1:</span><span style="color:#F78C6C;">7860</span></span>\n<span class="line"><span style="color:#FFCB6B;">To</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">a</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">link,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">`</span><span style="color:#A6ACCD;">share</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">True</span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">launch</span><span style="color:#89DDFF;">()`</span><span style="color:#82AAFF;">.</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>看到这个提示就说明成功运行起来了，打开网址就可以看到程序的运行界面了：</p><p><img src="'+o+`" alt="4"></p><div class="tip custom-block"><p class="custom-block-title">温馨提示：</p><p>该项目是英文页面，可以使用浏览器的翻译功能转成中文来使用~</p></div><h2 id="二、使用" tabindex="-1">二、使用 <a class="header-anchor" href="#二、使用" aria-label="Permalink to &quot;二、使用&quot;">​</a></h2><p>stable-diffusion-webui 的功能很多，主要有如下 2 个：</p><ul><li><p>文生图（text2img）：根据提示词（Prompt）的描述生成相应的图片。</p></li><li><p>图生图（img2img）：将一张图片根据提示词（Prompt）描述的特点生成另一张新的图片。</p><div class="tip custom-block"><p class="custom-block-title">注：</p><p>本文只讲解文生图（text2img）功能，图生图（img2img）后续有机会再出文章，喜欢的请多多点赞关注支持一下 😃。</p></div></li></ul><h3 id="_1、文生图-text2img" tabindex="-1">1、文生图（text2img） <a class="header-anchor" href="#_1、文生图-text2img" aria-label="Permalink to &quot;1、文生图（text2img）&quot;">​</a></h3><p>在开始使用文生图之前，有必要了解以下几个参数的含义：</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>Prompt</td><td>提示词（正向）</td></tr><tr><td>Negative prompt</td><td>消极的提示词（反向）</td></tr><tr><td>Width &amp; Height</td><td>要生成的图片尺寸。尺寸越大，越耗性能，耗时越久。</td></tr><tr><td>CFG scale</td><td>AI 对描述参数（Prompt）的倾向程度。值越小生成的图片越偏离你的描述，但越符合逻辑；值越大则生成的图片越符合你的描述，但可能不符合逻辑。</td></tr><tr><td>Sampling method</td><td>采样方法。有很多种，但只是采样算法上有差别，没有好坏之分，选用适合的即可。</td></tr><tr><td>Sampling steps</td><td>采样步长。太小的话采样的随机性会很高，太大的话采样的效率会很低，拒绝概率高(可以理解为没有采样到,采样的结果被舍弃了)。</td></tr><tr><td>Seed</td><td>随机数种子。生成每张图片时的随机种子，这个种子是用来作为确定扩散初始状态的基础。不懂的话，用随机的即可。</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>以上对参数的解析源自以下文章：</p><ul><li><p><a href="https://zhuanlan.zhihu.com/p/574063064" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/574063064</a></p></li><li><p><a href="https://baijiahao.baidu.com/s?id=1758865024644276830&amp;wfr=spider&amp;for=pc" target="_blank" rel="noreferrer">https://baijiahao.baidu.com/s?id=1758865024644276830&amp;wfr=spider&amp;for=pc</a></p></li></ul></div><p>接下来我们来生成一张赛博朋克风格的猫咪图片，配置以下参数后，点击 “Generate” 即可：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Prompt：a</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cute</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cat,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cyberpunk</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">art,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">by</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Adam</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Marczyński,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cyber</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">steampunk</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">k</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">d,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kerem</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">beyit,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">very</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cute</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">robot</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">zen,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">beeple</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Negative</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">prompt：</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">deformed,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">distorted,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">disfigured:</span><span style="color:#F78C6C;">1.3</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">poorly</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">drawn,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bad</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">anatomy,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">wrong</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">anatomy,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">extra</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">limb,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">missing</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">limb,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">floating</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">limbs,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">mutated</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hands</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fingers:</span><span style="color:#F78C6C;">1.4</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">disconnected</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">limbs,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mutation,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mutated,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ugly,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">disgusting,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">blurry,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">amputation,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">flowers,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">human,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">man,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">woman</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">CFG</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">scale：</span><span style="color:#F78C6C;">6.5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Sampling</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">method：Euler</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">a</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Sampling</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">steps：</span><span style="color:#F78C6C;">26</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Seed：1791574510</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">注：</p><p>提示词（Prompt）越多，AI 绘图结果会更加精准，另外，目前中文提示词的效果不好，还得使用英文提示词。</p></div><p><img src="`+r+'" alt="5"></p><h3 id="_2、模型文件" tabindex="-1">2、模型文件 <a class="header-anchor" href="#_2、模型文件" aria-label="Permalink to &quot;2、模型文件&quot;">​</a></h3><p>眼尖的你可能发现了，上面截图里左上角 Stable Diffusion checkpoint 的值怎么跟之前截图里的不一样？这是因为我换了一个模型文件，还记得前面提到那个将近 4 个 G 大小的模型文件（v1-5-pruned-emaonly.safetensors）吗？那是 stable-diffusion-webui 的默认模型文件，用这个模型文件生成出来的图片比较丑，因此我换了另一个模型文件。模型文件下载的网站几个，比较出名的就是 civitai，这上面共享的都是别人训练好的模型。</p><div class="tip custom-block"><p class="custom-block-title">模型文件下载地址：</p><ul><li><p><code>civitai</code>：<a href="https://civitai.com/" target="_blank" rel="noreferrer">https://civitai.com/</a></p></li><li><p>默认的 <code>v1-5-pruned-emaonly</code>：<a href="https://huggingface.co/runwayml/stable-diffusion-v1-5/tree/main" target="_blank" rel="noreferrer">https://huggingface.co/runwayml/stable-diffusion-v1-5/tree/main</a></p></li></ul></div><p><img src="'+c+'" alt="6"></p><p>根据你要生成的图片风格（比如：动漫、风景），挑选合适的模型查看，前面那个文生图的例子，使用的就是这个 <code>Deliberate</code> 模型，直接点击 “Download Latest” 即可下载该模型文件。</p><p><img src="'+i+'" alt="7"></p><div class="tip custom-block"><p class="custom-block-title">注:</p><p>模型文件有 2 种格式，分别是 <code>.ckpt</code>（Model PickleTensor） 和 <code>.safetensors</code>（Model SafeTensor），据说 <code>.safetensors</code> 更安全，这两种格式 <code>stable-diffusion-webui</code> 都支持，随意下载一种即可。</p></div><p>将下载好的模型文件放到 <code>stable-diffusion-webui\\models\\Stable-diffusion</code> 目录下：</p><p><img src="'+C+'" alt="8"></p><p>放置好模型文件之后，需要重启一下 <code>stable-diffusion-webui</code>（执行 <code>webui-user.bat</code>）才能识别到。</p><p><img src="'+d+'" alt="9"></p><p>这些模型文件一般会附带一组效果图，点击任意一张，就可以看到生成该效果图的一些参数配置：</p><p><img src="'+b+`" alt="10"></p><p>把这些参数配置到 <code>stable-diffusion-webui</code> 中，点击 “Generate” 就可以生成类似效果的图片了。</p><div class="tip custom-block"><p class="custom-block-title">注：</p><p>把这些参数配置到 <code>stable-diffusion-webui</code> 中，点击 “Generate” 就可以生成类似效果的图片了。</p></div><p>文生图功能有很多东西可以发掘，你可以用它来生成世界上独一无二的图片，而要用好文生图功能，提示词（Prompt）是必须掌握的重中之重，它是有语法规则的，在此推荐两篇对 Prompt 详细说明的文章：</p><ul><li>全网 Stable Diffusion Prompt 运用技巧：<a href="https://www.bilibili.com/read/cv19903784" target="_blank" rel="noreferrer">https://www.bilibili.com/read/cv19903784</a></li><li>Prompt 工具網站：<a href="https://www.accucrazy.com/prompt-tools-ai/" target="_blank" rel="noreferrer">https://www.accucrazy.com/prompt-tools-ai/</a></li></ul><h2 id="三、工程配置" tabindex="-1">三、工程配置 <a class="header-anchor" href="#三、工程配置" aria-label="Permalink to &quot;三、工程配置&quot;">​</a></h2><p>前面说到，stable-diffusion-webui 是可以配置启动参数的，这是官方的 wiki：</p><ul><li>配置参数文档：<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Command-Line-Arguments-and-Settings" target="_blank" rel="noreferrer">https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Command-Line-Arguments-and-Settings</a></li></ul><h3 id="_1、常用参数" tabindex="-1">1、常用参数 <a class="header-anchor" href="#_1、常用参数" aria-label="Permalink to &quot;1、常用参数&quot;">​</a></h3><p>这里列几个常用的参数说明一下：</p><table><thead><tr><th style="text-align:left;">参数</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:left;">–listen</td><td>默认启动绑定的 ip 是 <code>127.0.0.1</code>，只能是你自己电脑可以访问 webui，如果你想让同个局域网的人都可以访问的话，可以配置该参数（会自动绑定 <code>0.0.0.0</code> ip）。</td></tr><tr><td style="text-align:left;">–port xxx</td><td>默认端口是 <code>7860</code>，如果想换个端口，可以配置该参数，例如：<code>--port 8888</code>。</td></tr><tr><td style="text-align:left;">–gradio-auth username:password</td><td>如果你希望给 webui 设置登录密码，可以配置该参数，例如：<code>--gradio-auth GitLqr:123456</code>。</td></tr><tr><td style="text-align:left;">–use-cpu</td><td>默认使用 GPU 算力（需要 Nvidia 显卡），如果没显卡，可以配置该参数，改用 CPU 算力。</td></tr><tr><td style="text-align:left;">–medvram</td><td>为低显存（比如：4G）启用模型优化，会牺牲一点速度。</td></tr><tr><td style="text-align:left;">–lowvram</td><td>为极低显存（比如：2G）启用模型优化，会牺牲很多速度。</td></tr><tr><td style="text-align:left;">–autolaunch</td><td>启动时自动打开浏览器访问 webui。</td></tr></tbody></table><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">@</span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">off</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PYTHON=</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">GIT=</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">VENV_DIR=</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">COMMANDLINE_ARGS=--listen</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--port</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8888</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--gradio-auth</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">GitLqr:</span><span style="color:#F78C6C;">123456</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--autolaunch</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">call</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">webui.bat</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><img src="`+y+`" alt="11"></p><h3 id="_2、api-接口服务" tabindex="-1">2、API 接口服务 <a class="header-anchor" href="#_2、api-接口服务" aria-label="Permalink to &quot;2、API 接口服务&quot;">​</a></h3><p>除了上述几个常用的参数外，还有一个特别的参数 <code>--api</code>，可以在启动 <code>stable-diffusion-webui</code> 的同时，启动一个接口服务，在 <code>COMMANDLINE_ARGS</code> 后面追加上 <code>--api</code>：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">@</span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">off</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">PYTHON=</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">GIT=</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">VENV_DIR=</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">COMMANDLINE_ARGS=--listen</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--port</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8888</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--gradio-auth</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">GitLqr:</span><span style="color:#F78C6C;">123456</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--autolaunch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--api</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">call</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">webui.bat</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>重启后在 url 后面加上 <code>/docs</code> 即可看到 api 请求说明文档：</p><p><img src="`+u+'" alt="12"></p><p>这样我们就可以通过编写程序的方式，使用文生图、图生图等功能了，关于接口传参格式等要求，参见官方 wiki：</p><ul><li>官方 api 说明文档：<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/API#api-guide-by-kilvoctu" target="_blank" rel="noreferrer">https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/API#api-guide-by-kilvoctu</a></li></ul>',77),m=[D];function h(f,g,E,w,F,_){return a(),n("div",null,m)}const P=s(A,[["render",h]]);export{k as __pageData,P as default};
